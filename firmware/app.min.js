/**
 * Created by lukevenediger on 2016/05/03.
 */
function Plite(n){function t(n,e,i){n&&n.then?n.then(function(n){t(n,e,i)})["catch"](function(n){t(n,i,i)}):e(n)}function e(n){u=function(t,e){try{n(t,e)}catch(i){e(i)}},s(),s=void 0}function i(n){e(function(t,e){e(n)})}function o(n){e(function(t){t(n)})}function c(n,t){var e=s
s=function(){e(),u(n,t)}}var u,r=function(){},s=r,f={then:function(n){var t=u||c
return Plite(function(e,i){t(function(t){e(n(t))},i)})},"catch":function(n){var t=u||c
return Plite(function(e,i){t(e,function(t){i(n(t))})})},resolve:function(n){!u&&t(n,o,i)},reject:function(n){!u&&t(n,i,i)}}
return n&&n(f.resolve,f.reject),f}function micros(){return 1e3*Sys.time()*1e3}function FUBConnection(n,t,e){function i(){function t(){print("Reconnecting...")
var n=Math.min(3e4,1e3*p)
print("Waiting "+n+"ms to reconnect..."),setTimeout(function(){p++,i()},n)}print("Connection attempt "+p),a=new WebSocket(n),a.onopen=function(){p=1,o().then(function(n,t){print("Authenticated. SessionID: "+n),E=n,l=t,a.onmessage=c,T=!0,f(FUBEvent.CONNECTED)})["catch"](function(n){print("Authentication failed: "+n),t()})},a.onerror=function(n){print("Error: "+n)},a.onclose=function(){print("Closed."),T=!1,t()}}function o(){return Plite(function(n,i){var o=!1
setTimeout(function(){o||i("Auth request timed out.")},P),a.onmessage=function(t){print(t),print("Got auth response: "+t.data),o=!0
var e=JSON.parse(t.data)
e.type===R.SESSION_START?n(e.sessionID,e.serverTime):i("Unexpected response: "+t)},print("Sending auth packet"),r({type:R.AUTHENTICATE,app:t,id:e},!0)})}function c(n){switch(print("Got: "+n.data),n.type){case R.VALUE:u(n)}}function u(n){var t=h[n.requestID]
t&&(t.callback(n.value),t.deleteOnComplete&&delete h[n.requestID])}function r(n,t){T||t?(print("Sending a "+n.type+" message."),print(n)):print("Ignoring send - socket is not ready.")}function s(n,t,e){r({type:R.LOG,version:1,sessionID:E,level:n,module:t,message:e})}function f(n){I[n]&&I[n]()}var a,E,l,p=1,T=!1,N={},h={},O=0,I={},P=1e4,R={PING:"ping",GET:"get",VALUE:"value",SET:"set",SET_ONCE:"set_once",INCREMENT:"increment",PUSH:"push",SUBSCRIBE:"subscribe",SUBSCRIBE_CHANNEL:"subscribe_channel",UNSUBSCRIBE:"unsubscribe",ERROR:"error",AUTHENTICATE:"authenticate",SESSION_START:"session_start",LOG:"log"},d={INFO:"info",WARN:"warn",ERROR:"error"}
this.connect=function(){return i()},this.getSessionID=function(){return E},this.set=function(n,t){r({type:R.SET,path:n,value:t})},this.setOnce=function(n,t){r({type:R.SET_ONCE,path:n,value:t})},this.increment=function(n,t){r({type:R.INCREMENT,path:n,value:t})},this.subscribeChannel=function(n,t){O+=1,N[n]={requestID:O},h[O]={callback:t,deleteOnComplete:!1},r({type:R.SUBSCRIBE_CHANNEL,path:n,sessionID:E,requestID:O})},this.unsubscribe=function(){},this.logInfo=function(n,t){s(d.INFO,n,t)},this.logWarn=function(n,t){s(d.WARN,n,t)},this.logError=function(n,t){s(d.ERROR,n,t)},this.on=function(n,t){I[n]=t}}function LightPush(){function n(){print("initialising in 1 second"),setTimeout(function(){e()},1e3),print("creating a fub instance"),o=new FUBConnection(c,u,r),print("subscribing to an event"),o.on(FUBEvent.CONNECTED,t),print("connecting in 1 second..."),setTimeout(function(){o.connect()},1e3)}function t(){print("Connected!"),o.subscribeChannel("/light/red",i),print("Subscribed to channel")}function e(){print("initialiseHardware"),GPIO.setMode(Witty.RGB_RED,PinMode.OUTPUT,PullupMode.LOW),GPIO.setMode(Witty.RGB_GREEN,PinMode.OUTPUT,PullupMode.LOW),GPIO.setMode(Witty.RGB_BLUE,PinMode.OUTPUT,PullupMode.LOW),GPIO.write(Witty.RGB_RED,!1),GPIO.write(Witty.RGB_GREEN,!1),GPIO.write(Witty.RGB_BLUE,!1)}function i(){GPIO.write(Witty.RGB_RED,!0),setTimeout(function(){GPIO.write(Witty.RGB_RED,!1)},200)}var o,c="ws://192.168.0.9:22000",u="smart",r=Sys.conf.clubby.device_id
n()}Plite.resolve=function(n){return Plite(function(t){t(n)})},Plite.reject=function(n){return Plite(function(t,e){e(n)})},Plite.race=function(n){return n=n||[],Plite(function(t,e){var i=n.length
if(!i)return t()
for(var o=0;i>o;++o){var c=n[o]
c&&c.then&&c.then(t)["catch"](e)}})},Plite.all=function(n){return n=n||[],Plite(function(t,e){function i(){--u<=0&&t(n)}function o(t,o){t&&t.then?t.then(function(t){n[o]=t,i()})["catch"](e):i()}var c=n.length,u=c
if(!c)return t()
for(var r=0;c>r;++r)o(n[r],r)})},"object"==typeof module&&"function"!=typeof define&&(module.exports=Plite)
var PinMode={INPUT_AND_OUTPUT:0,INPUT:1,OUTPUT:2,INTERRUPT:3},InterruptType={DISABLE_INTERRUPTS:0,ENABLE_ON_POSITIVE_EDGE:1,ENABLE_ON_NEGATIVE_EDGE:2,ENABLE_ON_ANY_EDGE:3,ENABLE_ON_LOW_LEVEL:4,ENABLE_ON_HIGH_LEVEL:5,BUTTON_MODE:6},PullupMode={FLOATING:0,HIGH:1,LOW:2},Witty={RGB_RED:15,RGB_GREEN:12,RGB_BLUE:13,LIGHT_SENSOR:0,BUTTON:4},FUBConstants={TIMESTAMP:"fub:timestamp"},FUBEvent={CONNECTED:"connected"}
setTimeout(function(){print("Light sensor."),print("Starting in 10 seconds..."),setTimeout(function(){print("Starting up..."),new LightPush},1e4)},1e3)
